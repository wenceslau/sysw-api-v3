server:
  port: 8080
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  undertow:
    threads:
      worker: 64
      io: 4

##### EXPLANATION OF THE BLOCK ABOVE #####
# server:                 - This sets the main configuration block for the server.
# port: 8080              - This tells the server to operate on port 8080.
# compression:            - This block enables and configures how the server compresses the responses.
# enabled: true           - This enables compression.
# mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
#                         - This specifies the MIME types of the resources that should be compressed. Here, it compresses HTML, XML, plain text, CSS, JavaScript, and JSON.
# min-response-size: 1024 - This sets the minimum content length for compressing resources. Only responses larger than this size would be compressed.
# undertow:               - This block customizes the Undertow server (default servlet container in Spring Boot when using JBoss) configurations:
# threads:                - This configures the number and types of threads used by the Undertow server.
# worker: 64              - This sets the number of worker threads. Usually, set it to at least 10 per CPU core.
#                           Generally this should be reasonably high, at least 10 per CPU core: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2
# io: 4                   - This sets the number of IO threads. The typical suggestion is to have one IO thread per CPU core.
#                           One IO thread per CPU core is a reasonable default: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2

spring:
  datasource:
    url: jdbc:mysql://${mysql.url}/${mysql.schema}?useSSL=true&serverTimezone=UTC&characterEncoding=UTF-8
    username: ${mysql.username}
    password: ${mysql.password}
    hikari: # responsavel por gerenciar o pool
      auto-commit: false
      connection-timeout: 250 # É uma configuração em milliseconds. O ideal é manter baixo para que estoure timeout logo e não prenda as threads.
      max-lifetime: 600000 # Tempo máximo que uma conexão pode ficar aberta (10 min) - security.
      maximum-pool-size: 20 # Mantemos até no máx 20 conexões com o banco de dados. O ideal é manter baixo mesmo, pois é algo custoso para o banco gerenciar. https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
      minimum-idle: 10
      pool-name: master
  jpa:
    open-in-view: false # nao abre a transacao na entrada do controlador
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      "[hibernate.dialect]": org.hibernate.dialect.MySQL8Dialect
      "[hibernate.generate_statistics]": false
      "[hibernate.connection.provider_disables_autocommit]": true
      # Para aumentar a performance ao máximo, desabilitamos o auto-commit e o open-in-view.
      # https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/
